dist: trusty
sudo: required
language: bash

jobs:
  include:
    - stage: build KERNEL=4.15.0-43-generic SUITE=xenial
      env: KERNEL=4.15.0-43-generic SUITE=xenial
      before_install: &before_install
      - sudo apt-get update
      - sudo apt-get  install --yes qemu-system-x86 ipxe-qemu sshpass
      script: &build
      - export RELEASE=$(git describe --abbrev=0 --tags)
      - echo $RELEASE
      - export VERSION='0.98 Beta'
      - echo $VERSION
      - docker-compose up
      # With / on TMPFS
      - qemu-system-x86_64 -kernel build/coinboot-vmlinuz-${KERNEL} -initrd build/coinboot-initramfs-${KERNEL}
        -append 'console=ttyS0 netconsole=6666@192.168.1.10/eth0,6666@192.168.1.1/9c:4a:c7:7a:a1:7a net.ifnames=0 biosdevname=0 break=skip_loading_plugins' -m
        2048 -smp 4 -display none -daemonize -net user,hostfwd=tcp::2222-:22 -net nic
      - while ! nc -z 127.0.0.1 2222; do echo 'Waiting for Coinboot machine to listen on port 2222/SSH ...'; sleep 10; done
      - while ! sshpass -p ubuntu ssh -o StrictHostKeyChecking=no -l ubuntu -p 2222 localhost
        "grep -C 10 $RELEASE /etc/motd && lsb_release -a && uname -a" ; do echo 'Waiting for SSH login to succeed...'; sleep
        10; done
      - sudo killall qemu-system-x86_64
      - while nc -z 192.168.1.10 22; do echo 'Waiting for Coinboot machine to stop listen on port 22/SSH ...'; sleep 5; done
      # With / on ZRAM
      - qemu-system-x86_64 -kernel build/coinboot-vmlinuz-${KERNEL} -initrd build/coinboot-initramfs-${KERNEL}
        -append 'zram console=ttyS0 netconsole=6666@192.168.1.10/eth0,6666@192.168.1.1/9c:4a:c7:7a:a1:7a net.ifnames=0 biosdevname=0 break=skip_loading_plugins' -m
        2048 -smp 4 -display none -daemonize -net user,hostfwd=tcp::2222-:22 -net nic
      - while ! nc -z 127.0.0.1 2222; do echo 'Waiting for Coinboot machine to listen on port 2222/SSH ...'; sleep 10; done
      - while ! sshpass -p ubuntu ssh -o StrictHostKeyChecking=no -l ubuntu -p 2222 localhost
        "grep -C 10 $RELEASE /etc/motd && lsb_release -a && uname -a && zramctl" ; do echo 'Waiting for SSH login to succeed...'; sleep
        10; done
      deploy: &deploy
        provider: releases
        api_key: ${TOKEN}
        file_glob: true
        file: build/*
        skip_cleanup: true
        on:
          all_branches: true
    - stage: build KERNEL=4.15.0-43-generic SUITE=xenial and publish
      env: KERNEL=4.15.0-45-generic SUITE=xenial 
      before_install:
        <<: *before_install
      script:
        <<: *build
      deploy:
        <<: *deploy
        draft: false
